scriptencoding=utf-8
"===============================================================================
"	Brief	個人Vim設定ファイル 通常
"	Author	KORYUOH
"	Create	2014/10/02
"	Update	2017/05/03
"	Version	4.15
"===============================================================================

"エンコードの指定 UTF-8
"set encoding=UTF-8
"set fileencoding=UTF-8
"set termencoding=UTF-8

"エンコードの指定 Shift-JIS
"set encoding=cp932
"set fileencoding=cp932
"set termencoding=cp932

"ほかのから拾ってみた
if has('gui_running')
	set encoding=utf-8
	set bomb
endif
"set termencoding=utf-8
"set fileencoding=utf-8
"set encoding=utf-8
set fileencodings=utf-8,cp932

"スワップファイルはいらない
set noswapfile

" バックアップ用のフォルダがあれば
if isdirectory( expand('~/.vimbackup'))
	set backupdir=~/.vimbackup
	set backup
else
	"バックアップファイルもいらない
	set nobackup
endif

"undo用のフォルダがあるなら
if has( 'persistent_undo' ) && isdirectory(expand("~/.vimundo"))
	"undoファイルの保存先とundoファイルの生成
	set undodir=~/.vimundo
	set undofile
else
	"undoファイルも作らない
	set noundofile
endif

"分割されたのは下
set splitbelow

"分割されたのは右
set splitright

"タグファイルの指定
set tags=~/.tags

"表示タブ幅
set tabstop=4
"挿入タブ幅
set shiftwidth=4
"タブをスペースに展開しない
set noexpandtab
"行番号表示
set number
"長い行の折り返しをしない
set nowrap
"指定文字数を超えた場合、空白の跡で折り返さない
set textwidth=0
"カーソル行の色を変える
set cursorline

"ウィンドウの上下端でカーソル先の視界をいくつ確保するか
set scrolloff=8
"ウィンドウの左右端でカーソル先の司会をいくつ確保するか
set sidescrolloff=16
"左右端でスクロールが発生したときに何文字スクロールさせるか
set sidescroll=1

"インクリメント/デクリメントを0埋めされてても10進数として増減させる
set nf=

"タブを可視化
set list listchars=tab:\>\-

"日付の挿入
nmap <F5> <ESC><ESC>a<C-R>=strftime("%Y/%m/%d")<CR><ESC>

"時間の挿入
nmap <F6> <ESC><ESC>a<C-R>=strftime("%H:%M")<CR><ESC>

" ; <=> : 入れ替え
nmap ; :

" Ctrl + hで左のタブへ移動する
nmap <C-h> gT

" Ctrl + lで右のタブへ移動する
nmap <C-l> gt

nmap tq :tabclose<CR>

" Ctrl + Enterで改行挿入
nmap <C-Enter> I<CR><ESC>

" Ctrl + 十字キーでウィンドウ幅操作
nmap <C-Right> <C-W>>
nmap <C-Left> <C-W><
nmap <C-Up> <C-W>-
nmap <C-Down> <C-W>+

" 対応カッコまで飛ぶ
nmap <C-[> %

" ESC二回押しでサーチのハイライト非表示
nmap <silent><ESC><ESC> :nohlsearch<CR>

"_vimrcの再読み込み
command! ReloadVimrc source ~/github/_vimrc

command! OpenVimrc tabnew $HOME/github/_vimrc

command! OpenGVimrc tabnew $HOME/github/_gvimrc

"全角スペースの表示
function! WideSpace()
	highlight WideSpace cterm=underline ctermfg=lightblue guibg=darkgray
endfunction

if has('syntax')
	augroup WideSpace
		autocmd!
		autocmd ColorScheme * call WideSpace()
		"autocmd VimEnter,WinEnter,BufRead * let w:m1=matchadd('WideSpace' , '　')
		autocmd VimEnter,WinEnter,BufRead * match WideSpace /　/
	augroup END
	call WideSpace()
endif

augroup VimSettings
	autocmd!
	autocmd Bufread,WinEnter,VimEnter {_basic,_plugin} set filetype=vim
augroup END

"virtualモードの時にスターで選択位置のコードを検索するようにする"
xnoremap * :<C-u>call <SID>VSetSearch()<CR>/<C-R>=@/<CR><CR>
xnoremap # :<C-u>call <SID>VSetSearch()<CR>?<C-R>=@/<CR><CR>
function! s:VSetSearch()
  let temp = @s
  norm! gv"sy
  let @/ = '\V' . substitute(escape(@s, '/\'), '\n', '\\n', 'g')
  let @s = temp
endfunction

