#vim:set nobomb:set encoding=utf-8
########################################
#	Brief	ddc.vim plugins
#	Author	KORYUOH
#	Create	2024/08/26
#	Update	2024/08/29
#	Version	1.12
#	Lazy : Not Lazy
########################################

[[plugins]]
#from neocomplete -> ddc.vim
repo = 'Shougo/ddc.vim'
depends=['denops.vim']
hook_add='''
call ddc#custom#patch_global({
\	'ui': 'native',
\	'sources' :[
\		'vim-lsp',
\		'around',
\		'buffer',
\		'neosnippet',
\		'file',
\		'skkeleton'
\		],
\	'sourceOptions': {
\		'_': {
\			'matchers'  : ['matcher_fuzzy'],
\			'sorters'   : ['sorter_fuzzy'],
\			'converters': ['converter_fuzzy'],
\			'ignoreCase': v:true,
\		},
\		'around': {
\			'mark': '[Arround]',
\		},
\		'buffer': {
\			'mark': '[Buffer]',
\		},
\		'vim-lsp': {
\			'mark': '[LSP]',
\			'forceCompletionPattern': '\.\w*|:\w*|->\w*',
\		},
\		'neosnippet' : {
\			'mark' : '[NS]',
\		},
\		'skkeleton': {
\			'mark' : '[skkeleton]' ,
\			'matchers' : [],
\			'sorters' : [],
\			'converters' : [],
\			'isVolatile' : v:true,
\			'minAutoCompleteLength' : 1,
\			},
\		},
\	'sourceParams': {
\		'around': { 'maxSize': 500 },
\		'buffer': {
\			'limitBytes': 5000000,
\			'forceCollect': v:true,
\			'fromAltBuf': v:true,
\		},
\	 },
\})
call ddc#custom#patch_filetype(
\	 ['ps1','dosbatch','autohotkey','registry'], {
\		'sorceOptions' : {
\			'file' : {
\				'forceCompletionPattern' : '\S\\\\S*',
\				},
\			},
\		'sorceParams' : {
\
\		'file' : {
\				'mode' : 'win32',
\			},
\}})
call skkeleton#config(#{
\	completionRankFile: '~/.skkeleton/rank.json',
\	globalDictionaries: [ ['~\dict\SKK-JISYO.L','euc-jp'] ],
\})
" Skkeletonでカタカナ入力に変更する
call skkeleton#register_keymap('input', '<C-q>' , 'katakana')

" skkeletonの有効/無効を切りかえる
inoremap <C-i> <Plug>(skkeleton-toggle)

" Tab Complete
inoremap <expr> <TAB>
\pumvisible() ? '<C-n>' : 
\ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ? 
\ '<TAB>' : ddc#map#ddc#map#manual_complete()

"Shift-Tab completion back
inoremap <expr> <S-TAB> pumvisible() ? '<C-p>' : '<C-h>'

call ddc#enable()
'''

## ===== DDC Sources

[[plugins]]
repo = 'Shougo/ddc-ui-native'
depends = ['denops.vim' , 'ddc.vm']

[[plugins]]
repo = 'Shougo/ddc-around'
depends = ['denops.vim' , 'ddc.vm']

[[plugins]]
repo = 'shun/ddc-source-vim-lsp'
depends = ['denops.vim' , 'ddc.vm']

[[plugins]]
repo = 'matsui54/ddc-source-buffer'
depends = ['denops.vim' , 'ddc.vm']

[[plugins]]
repo = 'LumaKernel/ddc-source-file'
depends = ['denops.vim' , 'ddc.vm']

[[plugins]]
repo = 'tani/ddc-fuzzy'
depends = ['denops.vim' , 'ddc.vm']

[[plugins]]
repo = 'vim-skk/skkeleton'
depends = ['denops.vim']

[[plugins]]
repo = 'yasunori0418/statusline_skk.vim'
on_source = ['skkeleton']


# [[plugins]]
# repo = 'Shougo/ddc-source-nextword'
# " -> NextWord
# " \		'nextword' : {
# " \				'mark' : '[NextWord]',
# " \				'minAutoCompleteLength' : 3,
# " \				'isVolatile' : v:true,
# " \				'matchers' : ['matcher_head'],
# " \				'sorters' : ['sorter_rank'],
# " \			},
	

## ===== DDC Sources
